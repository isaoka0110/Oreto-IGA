                サンプルプログラムcontourの解説

目次

1. 概要
2. プログラムの動作について
3. ソースコードの解説

このサンプルプログラムのポイント

* スムーズコンター

このサンプルプログラムで紹介されている「おてがる」API

autogl_draw_smooth_contour_quadrangle 
  四辺形領域内部にスムーズコンターを描画する。
autogl_draw_smooth_contour_triangle 
  三角形領域内部にスムーズコンターを描画する。
autogl_draw_contour_map
  画面右端にコンターマップを表示する。



1. 概要

サンプルプログラムcontourでは、「おてがる」可視化ユーティリティの
スムーズコンター機能を紹介しています。

「おてがる」可視化ユーティリティは、二次元あるいは三次元における
さまざまな物理量の可視化に関する機能を実現しています。

例えば、二次元平面上、または三次元空間のある表面上のスカラー場について、
これをコンタープロット表示することは、
スカラー場の可視化手段としてよく行なわれることです。
本サンプルプログラムは、このコンター表示を実現するための
デモプログラムです。



2. プログラムの動作について

このプログラムは、起動するとコンタープロットを表示します。
虹色の七色の間がスムーズに補間されるように塗りつぶされています。
これは一般にスムーズコンターと呼ばれます。

コンタープロットの対象となるスカラー場は、二次元の100 x 100で分割された
直交差分格子上に分布するものです。
このプログラムでは、x、yに関する適当なスカラー関数を利用して
このスカラー場を生成していますが、これをファイルから読み込むなどすれば、
コンタープロットのためのビューアとして使うことができるようになります。

このスカラー場のコンタープロットでは、これを７色のコンターカラーマップに
マップします。
ここではコンターの最小値を-1.0、最大値を5.0としています。
また、画面の右端に、コンターバーが表示されています。

マウスをドラッグすると、ビューが拡大あるいは縮小します。
ただし、マウスのドラッグ中は再描画しないようにしています。

それ以外のモードにするには、まずメニューバーからPanelを表示し、
そのmodeチョイスボックスからモードを変更します。
なお、このサンプルプログラムは二次元アプリケーションなので、
移動と拡大縮小だけが可能です。
回転のモードはありません。



3. ソースコードの解説

ソースコードcontour.fを上から眺めていきます。

まず、メインルーチンです。

コモンブロックですが、
スカラー値に関するグローバル変数grid_valuesが定義されています。
この変数は、x、y方向にそれぞれCELLS (=100) 分割した直交差分格子にある、
(CELLS + 1) x (CELLS + 1)の各格子点上のスカラー値を表現します。

その次に、コンター表示の最大値、最小値を表わす変数min_range、max_rangeが
定義されています。

そのあと、スカラー場を表現する変数grid_valuesについて、
これを適当にでっちあげたx、yに関するスカラー関数で初期化しています。

メインルーチンの後半に、
コメントになっている「おてがる」コールがいくつかあります。
これらのうち一つを選択してコメントアウトすると、
コンターマップのカラーテーブルが変更されます。
これらは「おてがる」可視化ユーティリティのコンターに関するAPIです。
それぞれ、

autogl_set_gray_scale_contour_map ： グレイスケール
autogl_set_contour_map_bcgyrm    ： 虹色(青、水色、緑、黄色、赤、紫の順)
autogl_set_contour_map_mbcgyr    ： 虹色(紫、青、水色、緑、黄色、赤の順)
autogl_set_contour_map_bcgyr     ： 虹色(青、水色、緑、黄色、赤の順)

デフォルトでは青から紫までのautogl_set_contour_map_bcgyrmが
用いられています。

また、これ以外の独自のカラーテーブルを定義することもできます。
詳しくは、マニュアルのAPIリファレンスmanual/api_reference.txtのうち、
可視化ユーティリティ、コンターのセクションを御覧下さい。

さて、サブルーチンplot_contourが、コンター表示を行なうところです。
ここにあるように、コンタープロットは、このスカラー場が分布する差分格子を
構成するすべてのセル、つまり、この例では計一万個の四辺形について、
スムーズコンターを描画していくことで生成されます。
スムーズコンターの場合、指定した領域内を七色がなめらかに補間されていきます。

各セルのスムーズコンターは、
「おてがる」のautogl_draw_smooth_contour_quadrangleによってなされます。
これは、「おてがる」の可視化ユーティリティに所属し、
四辺形の内部にスムーズコンターを表示するものです。

autogl_draw_smooth_contour_quadrangleの引数は、順に、コンターの最大値、最小値、
および、四辺形の各頂点ごとに、x、y、z座標とスカラーの値を並べます。
ちなみに、三角形の場合は、
autogl_draw_smooth_contour_triangleとなります。
詳しくは、マニュアルのAPIリファレンスmanual/api_reference.txtのうち、
可視化ユーティリティのセクションを御覧下さい。

スムーズコンターの他に、線コンター表示もできます。
これについては、サンプルプログラムのmore_sample_f/line_contour.fを参照。

次に、再描画コールバックautogl_redrawです。
本サンプルプログラムでは、ディスプレイリストを用いて描画を高速化しています。
これについては、サンプルプログラムのmore_sample_f/graph3d.fに
より詳しい説明があります。
このプログラムでは、サブルーチンplot_contourで描画されるすべてのものが
ディスプレイリストにいったん収納されています。

あと、注目すべき点としては、autogl_redrawのなかに、画面の右端にでてくる
コンターバーの表示ルーチン、autogl_draw_contour_mapがあります。
最初の引数の80は、ビューウィンドウ内のコンターバー領域の幅を表す
ピクセル数です。
なお、このコールをディスプレイリストに収納してはいけません。
