                サンプルプログラムselection2dの解説

目次

1. 概要
2. プログラムの動作について
3. ソースコードの解説

このサンプルプログラムのポイント

* 二次元アプリでの、より一般的なオブジェクト選択
* キーボードイベント

このサンプルプログラムで紹介されている「おてがる」API

autogl_get_pointing_device_position_dc 
  マウスイベントの位置をデバイス座標系で得る。 
autogl_start_selection
  選択処理を開始する。
autogl_set_selection_id
  現在の選択候補オブジェクトIDを設定する。
autogl_end_selection
  選択処理を終了する。
autogl_get_selected_id
  実際に選択された選択候補オブジェクトIDを返す。
autogl_draw_view
  再描画コールバックを強制的にコールする。
autogl_get_key_char
  キーボードのキーを得る。 



1. 概要

サンプルプログラムselection2dでは、「おてがる」二次元ユーティリティの
二次元イベント処理機能を紹介しています。

サンプルプログラムpick2dとの違いは、
pick2dがポリラインの頂点を選択しているのに対し、
selection2dでは、その稜線を選択していることです。
ここで紹介されている「おてがる」の選択APIでは、
点や線、面、およびそれらの集合など、任意のオブジェクトを選択できます。

詳しくは、マニュアルのAPIリファレンスmanual/api_reference.txtのうち、
グラフィックスにおける選択のセクションを御覧下さい。

また、pick2dと同様、ビューでのイベント処理も関係します。
マニュアルのAPIリファレンスmanual/api_reference.txtのうち、
グラフィックスにおけるイベント処理セクションを御覧下さい。



2. プログラムの動作について

このプログラムは、起動すると二次元のオブジェクトを表示します。

画面には、５本の線分から構成されるポリラインが表示されており、
selection2dでは、このポリラインの５本の稜線のうち
どれか一つを選択することができます。

ここで、その稜線のどれかをマウスの左ボタンでクリックしてみましょう。
それが選択されて赤くなり、
一方、端末にはメッセージが表示されます。
メッセージから、選択された稜線の番号(１から開始される)が分かります。
別の稜線を選択すれば、これまで選択されていたものはクリアされます。
その他の部分を選択しようとすれば、すべての選択が解除されます。

また、このサンプルプログラムは二次元アプリケーションなので、
メニューバーからPanelを表示し、移動や拡大縮小ができます。
modeチョイスのモードをその他(Other)にすると、
マウスによる稜線の選択ができるようになります。



3. ソースコードの解説

ソースコードselection2d.fを上から眺めていきます。

まず、メインルーチンです。

コモンブロックですが、
最初の変数vertexsはポリラインを構成する各頂点の二次元座標を表します。

次の変数selected_edge_idは、
現在選択されている稜線の番号を記録しています。
選択されていれば、1から5までの整数のどれかをとり、
また、なにも選択されていなければ、-1となります。

再描画コールバックautogl_redrawでは、二次元平面の座標軸を描画し、
続いてポリラインの各稜線に対応する線分を描画します。
このとき、もしその稜線が選択されていれば、赤で、
さもなくば、白で線分を描画します。

イベント処理コールバックautogl_handle_eventの構造は、
基本的にはサンプルプログラムのpick2dと同じです。
異なるのは、何をどのようにピックするのかです。
このサンプルプログラムでは、各稜線に対応する線分を選択します。

まず、「おてがる」APIのautogl_get_pointing_device_position_dcにより、
マウスクリックの位置に対応するデバイス座標を取得します。
なお、「おてがる」のデバイス座標系は三次元です。

次に、デバイス座標とトレランスを引数として、「おてがる」APIの
autogl_start_selectionをコールします。
ここから、autogl_end_selectionまでの間はセレクションモードとよばれ、
この間に描画されたオブジェクトはビューにはあらわれず、
そのかわり選択判定処理が行なわれます。

「おてがる」の描画命令に混ざって、
autogl_set_selection_idというコールがあります。
これは、これ以降から次のコールまでに発行される一連の描画命令群によって
構成されるオブジェクトに対応するセレクションIDを設定します。
マウスピックによってオブジェクトを選択する際には、このIDが返って来ます。
同一セレクションIDの描画命令は、同じオブジェクトに属するとみなされます。

autogl_get_selected_idにより、マウスピックされた場所からもっとも手間にある
描画命令に関連するオブジェクトのセレクションIDを返します。
もし何もなければ、-1を返します。

これにより、選択された稜線の番号か、あるいは-1が端末に表示され、
また、ビューを再描画するため、autogl_draw_viewをコールします。

ついでに、キーボードイベントについて説明します。
autogl_get_key_charは、キーボードイベントのキーの文字を返します。
このサンプルプログラムでは、スペースキーに反応してます。
さもなくば、「おてがる」二次元アプリケーションとしてのデフォルト処理
autogl_handle_default_key_event_in_mode2dを実行します。

