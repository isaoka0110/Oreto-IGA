これは、sample_f/のREADMEです。

このディレクトリには、FORTRANのサンプルプログラムが一つだけあります。
このプログラム、helloは、「おてがる」を使った最も簡単なプログラムに
なります。

また、これをコンパイルするために、
LinuxとWindows(Cygwin)用にMakefileおよびシェルスクリプトを用意してあります。
これらは、同様に最もシンプルな「おてがる」のMakefileおよびシェルスクリプトです。

ここにあるプログラムは一つのプログラムにつき一つのソースファイルが
対応します。プログラムhelloについては、hello.fがソースファイルです。



1. サンプルプログラムのコンパイル

まず、サンプルプログラムをコンパイルする前に、
「おてがる」ライブラリをコンパイルして下さい。
詳しくは、「おてがる」パッケージディレクトリ直下のINSTALLを参照してください。
ここで、FORTRANを用いる場合の注意ですが、
lib/autogl_os.hファイルの修正を忘れないようにお願いします。

次に、サンプルプログラムをコンパイルする際には、以下のようになります。

1) Linuxの場合

makeを用いる場合は、端末上から、

$ make -f Makefile.linux

または、シェルスクリプトの場合は、

$ ./compile_linux.sh

2) Windowsの場合

まず、Cygwinをインストールして下さい。Cygwinの端末で以下を打ち込みます。
makeを用いる場合は、

$ make -f Makefile.cygwin

または、シェルスクリプトの場合は、

$ ./compile_cygwin.sh



2. サンプルプログラムの実行

サンプルプログラムを実行する際には、以下のようになります。
Linux、Windowsの場合とも、端末上から、

$ ./hello

ビューウィンドウが開きます。
ビューウィンドウでマウスをドラッグすると、オブジェクトが回転します。
また、ビューのメニューバーからPanelメニューを選ぶと、
Panelという名のパネルウィンドウが表示されます。
パネルウィンドウ上にあるmodeチョイスより
ビュー上でのマウス操作モードを変更できます。

Other : その他のモード。
  通常は、なにもおこりません。ただし、「おてがる」アプリによっては、
  マウスイベントに反応したりオブジェクトの選択ができるようになるものが
  あります。
  また、キーボードショートカットとして、キーボードからOまたはoキーを入力すれば、
  このモードに移ります。

Translate : 並行移動モード(Pan）。
  マウスのドラッグにしたがって、オブジェクトを移動します。
  これは、ビューの視野中心点を視野座標系のXY平面上で移動させます。
  また、キーボードショートカットとして、キーボードからTまたはtキーを入力すれば、
  このモードに移ります。

Rotate_direction : 回転モード
  マウスのドラッグにしたがって、オブジェクトを回転します。
  これは、視野座標系のX、Y方向に関する回転です。
  また、キーボードショートカットとして、キーボードからRまたはrキーを入力すれば、
  このモードに移ります。

rotate_Up_vector : 上方向ベクトルの回転
  ビュー上向きベクトルを回転することにより、画面の上向きの定義を変更します。
  これは、視野座標系におけるZ方向に関する回転です。
  また、キーボードショートカットとして、キーボードからUまたはuキーを入力すれば、
  このモードに移ります。

Scale : 拡大縮小モード(Zoom)
  マウスの左右または上下の動きに対応して、オブジェクトを拡大または縮小します。
  また、キーボードショートカットとして、キーボードからSまたはsキーを入力すれば、
  このモードに移ります。

起動した「おてがる」アプリを終了させたいときには、
これを起動した端末にカーソルをもどし、
Ctrl-C(コントロールキーとCキーを同時に押す)で終了します。

ただし、WindowsのCygwin環境の場合、
一見これではうまくいかないように思われるかもしれませんが、
しつこく押し続けるとなんとか止まるようです。
これはWindowsのCygwin環境におけるFORTRAN特有の現象なようです。

また、「おてがる」アプリは基本的にはなんらかの端末から起動するようにしてください。
「おてがる」の設計は基本的にヘタレなので、
WindowsあるいはLinuxのGNOME環境において、ウィンドウ隅のXボタンを押しても
プログラム自体は終了しませんので御注意を。
なお、「おてがる」アプリごとに独自のQuitボタンを用意することは、
ユーザー側のプログラミングにより、わりと簡単にできます。



3. ディレクトリ構成

以下はプラットフォーム共通です。

README : このファイル

hello.f : サンプルプログラムhelloのソースコード
  このプログラムはまず座標系を描画し、続いて、三角形を赤で、直方体を水色で、
  Hello, world!という文字列を黄色で表示します。

hello.txt : プログラムの説明



以下はLinux用です。

Makefile.linux : Linux向けのMakefile
  ライブラリとしてOpenGLとGtk+およびgtkglareaを用いています。
  それぞれ、-lgtlglはgtkglarea、-lGLUと-lGLはOpenGL、
  `gtk-config --libs`はGtk+に関するライブラリ。

compile_linux.sh : Linux向けのコンパイルスクリプト
  同上。



以下はWindows (Cygwin) 用です。

Makefile.cygwin : Windows向けのMakefile
  ライブラリとしてOpenGLとWIN32を用いています。
  また、コンパイラ、リンカ等はCygwinのg77を用いています。
  それぞれ、-lglu32と-lopengl32はOpenGL、
  -luser32と-lgdi32はWIN32に関するライブラリ。

compile_cygwin.sh : Windows向けのコンパイルスクリプト
  同上。
