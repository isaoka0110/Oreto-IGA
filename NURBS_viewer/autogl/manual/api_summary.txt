                     「おてがる」APIサマリー






1. 幾何演算 



1.1. トレランス管理 

トレランス値を設定する。
AutoGL_SetTolerance

トレランス値を得る。
AutoGL_GetTolerance



1.2. 二次元ベクトル演算 

ベクトルをベクトルに代入する。
AutoGL_AssignVector2D 

２つのベクトルを加算する。
AutoGL_AddVector2D 

２つのベクトルを減算する。
AutoGL_SubtractVector2D 

ベクトルとスカラーを乗算する。
AutoGL_MultiplyVector2D 

ベクトルの長さを得る。
AutoGL_GetVectorLength2D 

ベクトルを正規化する。
AutoGL_NormalizeVector2D 

２つのベクトルのスカラー積を得る。
AutoGL_GetScalarProduct2D 

２つのベクトルの距離を得る。
AutoGL_GetVectorDistance2D 

２つのベクトルの成分ごとの最小値を得る。
AutoGL_GetMinVector2D 

２つのベクトルの成分ごとの最大値を得る。
AutoGL_GetMaxVector2D

ベクトルに垂直なベクトルを得る。
AutoGL_GetAnyPerpendicularDirection2D 



1.3. 三次元ベクトル演算

ベクトルをベクトルに代入する。
AutoGL_AssignVector3D 

２つのベクトルを加算する。
AutoGL_AddVector3D 

２つのベクトルを減算する。
AutoGL_SubtractVector3D 

ベクトルとスカラーを乗算する。
AutoGL_MultiplyVector3D 

ベクトルの長さを得る。
AutoGL_GetVectorLength3D 

ベクトルを正規化する。
AutoGL_NormalizeVector3D 

２つのベクトルのスカラー積を得る。
AutoGL_GetScalarProduct3D 

２つのベクトルのベクトル積を得る。
AutoGL_GetVectorProduct3D 

２つのベクトルの距離を得る。
AutoGL_GetVectorDistance3D 

２つのベクトルの成分ごとの最小値を得る。
AutoGL_GetMinVector3D 

２つのベクトルの成分ごとの最大値を得る。
AutoGL_GetMaxVector3D

ベクトルに垂直な２つのベクトルを得る。
AutoGL_GetAnyPerpendicularDirection3D 






2. ユーザーインターフェイス管理 



UIを作る
このルーチンは必ずユーザープログラム側に一つ存在しなければならない。
AutoGL_SetUp



グループを登録する。 （パネルに対応する。） 
AutoGL_AddGroup 

コメントを登録する。 （ラベルに対応する。） 
AutoGL_AddComment

コールバック関数を登録する。 （ボタンに対応する。） 
AutoGL_AddCallback 

論理変数を登録する。 （トグルに対応する。） 
AutoGL_AddBoolean 

文字列変数を登録する。 （フィールドに対応する。） 
AutoGL_AddString 

整数変数を登録する。 （フィールドまたはチョイスに対応する。） 
AutoGL_AddInteger 

整数変数の最大最小レンジを登録する。 
AutoGL_SetIntegerRange 

整数変数の列挙値を加える。 （チョイスに対応する。）
AutoGL_AddIntegerItem 

実数変数を登録する。 （フィールドに対応する。）
AutoGL_AddReal 

実数変数の最大最小レンジを登録する。 
AutoGL_SetRealRange 

現在のコールバック関数・制御変数について、ラベルを設定する。 
AutoGL_SetLabel 

ビューの再描画用コールバック関数を登録する。 
AutoGL_SetViewRedrawCallback 

ビューのイベント処理コールバック関数を登録する。 
AutoGL_SetViewEventCallback 

アイドルイベント処理を有効にする。 
AutoGL_EnableIdleEvent

アイドルイベント処理コールバック関数を登録する。 
AutoGL_SetIdleEventCallback 

バッチ処理コールバック関数を登録する。
AutoGL_SetBatchProcessCallback 






3. グラフィックス



3.1. レンダリング 

ビューの背景色を設定する。 
AutoGL_SetBackgroundColor 

鏡面反射を有効にする。 
AutoGL_TurnOnSpecular

半透明処理を有効にする。 
AutoGL_TurnOnTransparency

現在の色を設定する。 
AutoGL_SetColor 

現在の不透明度を設定する。 
AutoGL_SetOpacity

線分を現在の色で描画する。
AutoGL_DrawLine 

三角形を現在の色で塗り潰す。
AutoGL_DrawTriangle 

三角形を色補間により塗り潰す。
AutoGL_DrawColorInterpolatedTriangle 

三角形を法線ベクトル補間により塗り潰す。 
AutoGL_DrawNormalInterpolatedTriangle 

四辺形を現在の色で塗り潰す。 
AutoGL_DrawQuadrangle 

文字列を現在の色で描画する。 
AutoGL_DrawString 

ディスプレイリストを開き、これを空にする。
AutoGL_OpenDisplayList

ディスプレイリストを閉じる。 
AutoGL_CloseDisplayList

ディスプレイリストを描画する。
AutoGL_DrawDisplayList

ディスプレイリストをファイルから読む。
AutoGL_ReadDisplayList

ディスプレイリストをファイルに書く。
AutoGL_WriteDisplayList

AutoGLメタファイルを読み出す。
AutoGL_ReadMetafile 

AutoGLメタファイルに書き込む。
AutoGL_WriteMetafile 

AutoGLイメージファイル名を設定する。
AutoGL_SetImageFileName 

AutoGLイメージファイル名を得る。 
AutoGL_GetImageFileName 

上記の各種描画命令の高速版。 
ディスプレイリストには登録されない。immediate mode用。
法線方向をあらかじめ計算しておくこと。
引数がすべてfloat型であることに注意。

AutoGL_SetColor2 

AutoGL_DrawLine2 

AutoGL_DrawTriangle2 

AutoGL_DrawColorInterpolatedTriangle2

AutoGL_DrawNormalInterpolatedTriangle2 

AutoGL_DrawString2 

AutoGL_SetSelectionId2

OpenGLなどのネイティブなグラフィックスAPIを直接用いる際に
ネイティブAPIコールの直前直後に呼び出す。

AutoGL_BeginNativeCall

AutoGL_EndNativeCall



3.2. ビューイングパラメータと座標変換 

ビューのサイズを設定する。
AutoGL_SetViewSize

ビューの注視点を設定する。
AutoGL_SetViewCenter

ビューの視線方向を設定する。 
AutoGL_SetViewDirection

ビューの視線上向き方向を設定する。 
AutoGL_SetViewUpVector

投影法を透視投影にするか、しない(平行投影)かを設定する。
AutoGL_SetPerspectiveViewFlag

ポリゴンを裏表とも描画するかどうかを設定する。
AutoGL_SetTwoSideFaceFlag

ビューのサイズを得る。 
AutoGL_GetViewSize

ビューの注視点を得る。 
AutoGL_GetViewCenter 

ビューの視線方向を得る。 
AutoGL_GetViewDirection 

ビューの視線上向き方向を得る。 
AutoGL_GetViewUpVector 

ビューのデバイス座標系での高さと幅を得る。 
AutoGL_GetViewRangeDc 

ビューのデバイス座標系でのサイズを得る。 
AutoGL_GetViewSizeDc 

デバイス座標から視点座標を得る。 
AutoGL_GetVcOfDc 

視点座標から世界座標を得る。 
AutoGL_GetPositionOfVc 

デバイス座標から世界座標を得る。 
AutoGL_GetPositionOfDc 

投影法が透視投影かどうか。
AutoGL_GetPerspectiveViewFlag

ポリゴンを裏表とも描画するかどうか。
AutoGL_GetTwoSideFaceFlag



3.3. イメージ処理 

ビューのイメージを得る。 
AutoGL_GetViewImage



3.4. 選択 

選択処理を開始する。
AutoGL_StartSelection

現在の選択候補オブジェクトIDを設定する。
AutoGL_SetSelectionId

選択処理を終了する。
AutoGL_EndSelection

実際に選択された選択候補オブジェクトIDを返す。
AutoGL_GetSelectedId



3.5. イベント処理 

イベントのタイプを得る。 
AutoGL_GetViewEvent

ポインティングデバイスの位置を得る。 
AutoGL_GetPointingDevicePositionDc 

キーボードキーを得る。 
AutoGL_GetKeyChar






4. グラフィカルユーザーインターフェイス処理 



ビューのサイズを変更する。 
AutoGL_ResizeView

ビューを再描画する。 
ビューの再描画関数が呼び出される。 
AutoGL_DrawView

AutoGLの終了処理をする。 
自分で用意したQuitボタンなどから, exit()の直前に呼び出す。 
AutoGL_Terminate






5. コマンドラインとスクリプティング処理 



ファイルからコマンドを解釈・処理する。 
AutoGL_InterpretInBatchMode

標準入力からコマンドを解釈・処理する。 
コマンドの処理結果は標準出力に表示される。 
AutoGL_InterpretInInteractiveMode

スクリプトファイルを解釈・処理する。 
コマンドの処理結果は標準出力に表示される。 
AutoGL_InterpretScript






6. ユーティリティ 



6.1. コマンドライン処理とスクリプティング 

コマンドライン処理とスクリプティング機能をパネルに準備する。 
AutoGL_SetPanelForInterpreter



6.2. イメージのセーブとロード

PPMファイルにビューのイメージを保存する。
AutoGL_SaveViewImageToPPMFile

PPMファイルからイメージを読み出す。
AutoGL_ReadImageFromPPMFile 

画面セーブ機能をパネルに準備する。
AutoGL_SetPanelForSave






7. 可視化ユーティリティ 



7.1. コンタ-

コンタ-マップのカラーテーブルをクリアする。 
AutoGL_ClearContourColor

コンタ-マップのカラーテーブルにグレードごとの色を設定する。 
AutoGL_AddContourColorOfGrade 

グレイスケールのコンタ-マップを設定する。 
AutoGL_SetGrayScaleContourMap

青、水色、緑、黄色、赤、紫の順で虹色のコンタ-マップを設定する。 
AutoGL_SetContourMap_BCGYRM

紫、青、水色、緑、黄色、赤の順で虹色のコンタ-マップを設定する。 
AutoGL_SetContourMap_MBCGYR

青、水色、緑、黄色、赤の順で虹色のコンタ-マップを設定する。 
AutoGL_SetContourMap_BCGYR

コンタ-の値に対応する色を得る。 
AutoGL_GetContourColor 

三角形をコンタ-で塗り潰す。 
AutoGL_DrawContourTriangle 

画面右に面コンタ-での色と値との対応表をバー表示する。 
AutoGL_DrawContourMap 

画面右に線コンタ-での色と値との対応表をバー表示する。 
AutoGL_DrawLineContourMap 

画面右にバンドコンタ-での色と値との対応表をバー表示する。 
AutoGL_DrawBandContourMap 



7.2. 低レベル可視化API 

三角形から等高線（等値線）データを計算する。 
AutoGL_GetIsoline 

三角形から等高線（等値線）の頂点を計算する。 
AutoGL_GetIsolineVertex 

三角形の等高線（等値線）を描画する。 
AutoGL_DrawTriangleIsoline 

四面体から等高面（等値面）データを計算する。 
AutoGL_GetIsosurface 

四面体から等高面（等値面）の頂点を計算する。 
AutoGL_GetIsosurfaceVertex 

四面体の等高面（等値面）を描画する。 
AutoGL_DrawTetrahedronIsosurface 

四面体と平面との交差断面の面コンタ-を描画する。 
AutoGL_DrawTetrahedronSectionContour 



7.3. 高レベル可視化API 

三角形をスムーズコンターで塗りつぶす。 
AutoGL_DrawSmoothContourTriangle 

三角形を線コンターで塗りつぶす。 
AutoGL_DrawLineContourTriangle 

三角形をバンドコンターで塗りつぶす。 
AutoGL_DrawBandContourTriangle 

四辺形をスムーズコンターで塗りつぶす。 
AutoGL_DrawSmoothContourQuadrangle 

四辺形を線コンターで塗りつぶす。 
AutoGL_DrawLineContourQuadrangle 

四辺形をバンドコンターで塗りつぶす。 
AutoGL_DrawBandContourQuadrangle 

四面体を等値面で塗りつぶす。 
AutoGL_DrawIsosurfaceTetrahedron

四面体と平面との交差断面をスムーズコンターで塗りつぶす。 
AutoGL_DrawSectionSmoothContourTetrahedron

四面体と平面との交差断面を線コンターで塗りつぶす。 
AutoGL_DrawSectionLineContourTetrahedron

四面体と平面との交差断面をバンドコンターで塗りつぶす。 
AutoGL_DrawSectionBandContourTetrahedron

六面体を等値面で塗りつぶす。 
AutoGL_DrawIsosurfaceHexahedron

六面体と平面との交差断面をスムーズコンターで塗りつぶす。 
AutoGL_DrawSectionSmoothContourHexahedron

六面体と平面との交差断面を線コンターで塗りつぶす。 
AutoGL_DrawSectionLineContourHexahedron

六面体と平面との交差断面をバンドコンターで塗りつぶす。 
AutoGL_DrawSectionBandContourHexahedron





8. 二次元ユーティリティ 



8.1. 二次元ビューイングパラメータ操作 

ビューイングパラメータ設定機能をパネルに準備する。 
AutoGL_SetPanelInView2D



8.2. 二次元描画プリミティブ 

座標系にアラインされた箱を表示する。 
AutoGL_DrawBox2D 

十字マークを表示する。 
AutoGL_DrawCrossMark2D 

ダイアモンドマークを表示する。 
AutoGL_DrawDiamondMark2D 

正方形マークを表示する。 
AutoGL_DrawSquareMark2D 

矢印を表示する。 
AutoGL_DrawArrow2D 



8.3. 二次元イベント処理 

移動拡大縮小機能をパネルに準備する。 
AutoGL_SetPanelInMode2D

イベント処理モードを設定する。 
AutoGL_SetMode2D

イベント処理モードを得る。 
int AutoGL_GetMode2D

ドラッグ中に描画を行う。 
AutoGL_EnableDragInMode2D

ユーザー定義イベント処理コールバックを設定する。 
AutoGL_SetDefaultCallbackInMode2D 

デフォルトのキーイベント処理 
ユーザー定義イベント処理コールバックから呼ぶ。 
AutoGL_HandleDefaultKeyEventInMode2D

ポインティングデバイスがヒットしたかを調べる。 
AutoGL_PointingDeviceIsHit2D 






9. 三次元ユーティリティ 



9.1. 三次元ビューイングパラメータ操作 

ビューイングパラメータ設定機能をパネルに準備する。 
AutoGL_SetPanelInView3D

ビューを相対的に回転する。 
AutoGL_RotateView 



9.2. 三次元描画プリミティブ 

座標系にアラインされた箱を表示する。 
AutoGL_DrawBox3D 

十字マークを表示する。 
AutoGL_DrawCrossMark3D 

ダイアモンドマークを表示する。 
AutoGL_DrawDiamondMark3D 

立方体マークを表示する。 
AutoGL_DrawCubeMark3D 

矢印を表示する。 
AutoGL_DrawArrow3D 

左下に座標系を表示する。 
AutoGL_DrawCoordinateSystem3D 

球を表示する。 
AutoGL_DrawSphere3D 

円柱を表示する。 
AutoGL_DrawCylinder3D 

円錐を表示する。 
AutoGL_DrawCone3D 

円を表示する。 
AutoGL_DrawCircle3D 

座標系にアラインされた箱をソリッド表示する。 
AutoGL_FillBox3D 



9.3. 三次元イベント処理 

移動回転拡大縮小機能をパネルに準備する。 
AutoGL_SetPanelInMode3D

イベント処理モードを設定する。 
AutoGL_SetMode3D

イベント処理モードを得る。 
int AutoGL_GetMode3D

ドラッグ中に描画を行う。 
AutoGL_EnableDragInMode3D

ユーザー定義イベント処理コールバックを設定する。 
AutoGL_SetDefaultCallbackInMode3D 

デフォルトのキーイベント処理 
ユーザー定義イベント処理コールバックから呼ぶ。 
AutoGL_HandleDefaultKeyEventInMode3D

ポインティングデバイスがヒットしたかを調べる。 
AutoGL_PointingDeviceIsHit3D 



