                サンプルプログラムsectionの解説

目次

1. 概要
2. プログラムの動作について
3. ソースコードの解説

このサンプルプログラムのポイント

* 断面コンター

このサンプルプログラムで紹介されている「おてがる」API

AutoGL_DrawSectionSmoothContourHexahedron 
  六面体領域内部に断面スムーズコンターを描画する。
AutoGL_DrawSectionSmoothContourTetrahedron 
  四面体領域内部に断面スムーズコンターを描画する。
AutoGL_DrawSectionLineContourHexahedron 
  六面体領域内部に断面線コンターを描画する。
AutoGL_DrawSectionLineContourTetrahedron 
  四面体領域内部に断面線コンターを描画する。
AutoGL_DrawBox3D
  直方体の枠線を描画する。



1. 概要

サンプルプログラムsectionでは、「おてがる」可視化ユーティリティの
断面コンター機能を紹介しています。

「おてがる」可視化ユーティリティは、二次元あるいは三次元における
さまざまな物理量の可視化に関する機能を実現しています。

例えば、三次元空間のある領域内のスカラー場について、
この任意平面における断面を取り、
この断面上のスカラー場についてコンター表示することは、
スカラー場の可視化手段としてよく行なわれることです。
本サンプルプログラムは、この断面コンター表示を実現するための
デモプログラムです。



2. プログラムの動作について

このプログラムは、起動すると断面コンタープロットを表示します。

断面コンター表示の対象となるスカラー場は、三次元の40 x 40 x 40で分割された
直交差分格子上に分布するものです。
このプログラムでは、x、y、zに関する適当なスカラー関数を利用して
このスカラー場を生成していますが、これをファイルから読み込むなどすれば、
断面コンター表示のためのビューアとして使うことができるようになります。

このスカラー場の断面コンター表示では、1枚の断面を抽出し、
この断面のスムーズコンターを描画しています。
ここではコンターの最小値を-1.0、最大値を5.0としています。
また、画面の右端に、コンターバーが表示されています。

マウスをドラッグすると、ビューが回転します。
それ以外のモードにするには、まずメニューバーからPanelを表示し、
そのmodeチョイスボックスからモードを変更します。
なお、このサンプルプログラムは三次元アプリケーションです。
移動、回転および拡大縮小ができます。



3. ソースコードの解説

ソースコードsection.cを上から眺めていきます。

「おてがる」のヘッダファイルを読み込んだあと、
スカラー値に関するグローバル変数GridValuesが定義されています。
この変数は、x、y、z方向にそれぞれCELLS (=40) 分割した直交差分格子にある、
(CELLS + 1) x (CELLS + 1) x (CELLS + 1)の各格子点上のスカラー値を表現します。

その次に、コンター表示の最大値、最小値を表わす変数MinRange、MaxRangeが
定義されています。

それと、断面に関する任意平面をあらわす平面の方程式Ax+By+Cz+D=0における
各係数A、B、C、Dが定義されています。
ここでは、平面 x + 2y + 3z + 4 = 0 となっています。

関数Functionは適当にでっちあげたスカラー場を表わすための、
引数x、y、zに関するスカラー関数です。
これを用いて、次の関数InitializeGridではスカラー場を表現する変数
GridValuesを初期化しています。

関数PlotSectionが、断面コンター表示を行なうところです。
ここにあるように、断面コンター表示は、このスカラー場が分布する差分格子を
構成するすべてのセル、つまり、この例では計6万4千個の六面体について、
断面を構成する三角形群を切出し、
これらをスムーズコンターとして描画していくことで生成されます。

各セルの等値面描画は、
「おてがる」のAutoGL_DrawSectionSmoothContourHexahedronによってなされます。
これは、「おてがる」の可視化ユーティリティに所属し、
六面体の内部に断面コンターを描画するものです。

AutoGL_DrawSectionSmoothContourHexahedronの引数は、
順に、平面方程式の係数A、B、C、D、最小値、最大値、
および、六面体の各頂点ごとに、x、y、z座標とスカラーの値を並べます。
ちなみに、四面体の場合は、
AutoGL_DrawSectionSmoothContourTetrahedronとなります。
あと、スムーズコンターでなく、線コンターの場合は、それぞれ、
AutoGL_DrawSectionLineContourHexahedronおよび
AutoGL_DrawSectionLineContourTetrahedronとなります。
線コンターの場合は、引数にグレードの段数が追加されます。
詳しくは、マニュアルのAPIリファレンスmanual/api_reference.txtのうち、
可視化ユーティリティのセクションか、
または、「おてがる」ヘッダファイルautogl.hよりインクルードされている、
lib/autogl_visualization.hを御覧下さい。

断面コンターの他に、等値面表示もできます。
これについては、サンプルプログラムのmore_sample_c/isosurface.cを参照。

その後が、再描画コールバックRedrawViewです。
本サンプルプログラムでは、ディスプレイリストを用いて描画を高速化しています。
これについては、サンプルプログラムのmore_sample_c/graph3d.cに
より詳しい説明があります。
このプログラムでは、関数PlotSectionで描画されるすべてのものが
ディスプレイリストにいったん収納されています。

ちなみに、AutoGL_DrawBox3Dは直方体の枠線を描画します。
ここでは、枠線はスカラー場である直交差分格子の範囲を意味しています。



# 旧バージョンの「おてがる」ユーザーへ

現バージョンでは新規に高レベル可視化ユーティリティが用意されました。
AutoGL_DrawSectionSmoothContourHexahedronや
AutoGL_DrawSectionSmoothContourTetrahedronはその一つです。
また、サンプルプログラムも書き換えられています。

これに併ない、旧バージョンで用いられていた
AutoGL_DrawTetrahedronSectionContourは
低レベル可視化ユーティリティに配置されました。
これ自体も引続きサポートされています。
